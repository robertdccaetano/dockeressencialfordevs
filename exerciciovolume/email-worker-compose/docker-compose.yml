version: '3'
volumes:
    dados:
networks:
    banco:
    fila:
    web:
services: 
    db:
        image: postgres:9.6
        environment: 
        - POSTGRES_USER=postgres
        - POSTGRES_HOST_AUTH_METHOD=trust
        volumes: 
            # Volume dos dados
            - dados:/var/lib/postgresql/data
            # Scripts
            - ./scripts:/scripts
            - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks: 
            - banco
        
            
    frontend:
        image: nginx:1.13
        volumes: 
            # Site
            - ./web:/usr/share/nginx/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        ports: 
            - 80:80
        networks:
            - web
        depends_on:
            # Depends on permitir orquestar a inicilizacao do servicos, começando pelos que nao dependem de nenhum outro servico, e cria a ordem de quem inicializa primeiro
            # docker-compose up frontend (dessa forma inicializa também as dependencias do servico front end)
            - app
    app:
        image: python:3.6
        volumes:
            # Aplicação
            - ./app:/app       
        working_dir: /app
        command: bash ./app.sh
        networks: 
            - banco
            - web
            - fila
        depends_on: 
            - db
        environment: 
            - DB_NAME=abc_sender

    queue:
        image: redis:3.2
        networks: 
            - fila

    worker:
        build: worker
        volumes: 
            # Worker
            - ./worker:/worker
        working_dir: /worker
        command: worker.py
        networks: 
            - fila
        depends_on:
            - queue